[{"C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\index.tsx":"1","C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\reportWebVitals.ts":"2","C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\theme.ts":"3","C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\redux\\store.ts":"4","C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\App.tsx":"5","C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\redux\\todos.ts":"6","C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\routes.ts":"7","C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\redux\\initialState.ts":"8","C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\types.ts":"9","C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\Calendar\\index.tsx":"10","C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\NavigationMenu\\index.tsx":"11","C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\Overview\\index.tsx":"12","C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\Todo\\index.tsx":"13","C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\Todo\\styles.ts":"14"},{"size":1098,"mtime":1612599734000,"results":"15","hashOfConfig":"16"},{"size":421,"mtime":1612196108000,"results":"17","hashOfConfig":"16"},{"size":290,"mtime":1612708194000,"results":"18","hashOfConfig":"16"},{"size":192,"mtime":1612531578000,"results":"19","hashOfConfig":"16"},{"size":2200,"mtime":1612713520000,"results":"20","hashOfConfig":"16"},{"size":2758,"mtime":1612895108000,"results":"21","hashOfConfig":"16"},{"size":68,"mtime":1612600262000,"results":"22","hashOfConfig":"16"},{"size":757,"mtime":1612895332000,"results":"23","hashOfConfig":"16"},{"size":890,"mtime":1612608800000,"results":"24","hashOfConfig":"16"},{"size":1937,"mtime":1612897640877,"results":"25","hashOfConfig":"16"},{"size":1589,"mtime":1612897672972,"results":"26","hashOfConfig":"16"},{"size":2094,"mtime":1612707510000,"results":"27","hashOfConfig":"16"},{"size":3666,"mtime":1612873394000,"results":"28","hashOfConfig":"16"},{"size":1355,"mtime":1612708624000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1amllv7",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\index.tsx",[],["61","62"],"C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\reportWebVitals.ts",[],"C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\theme.ts",[],"C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\redux\\store.ts",[],"C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\App.tsx",[],"C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\redux\\todos.ts",[],"C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\routes.ts",[],"C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\redux\\initialState.ts",[],"C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\types.ts",[],"C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\Calendar\\index.tsx",["63"],"import { makeStyles, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectors } from \"../redux/todos\";\nimport Todo from \"../Todo\";\nimport happyIcon from \"./happy.svg\";\n\nexport const useStyles = makeStyles((theme) => ({\n  dueDate: {\n    marginLeft: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(3),\n\n    \"&:first-of-type\": {\n      marginTop: 0,\n    },\n  },\n  iconContainer: {\n    textAlign: \"center\",\n  },\n  icon: {\n    height: 250,\n    margin: `${theme.spacing(5)}px 0`,\n  },\n  iconCredits: {\n    color: theme.palette.text.secondary,\n    fontSize: 10,\n    opacity: 0.25,\n  },\n  iconCreditsLink: {\n    color: `${theme.palette.text.secondary} !important`,\n  },\n}));\n\nfunction Calendar() {\n  const classes = useStyles();\n  const todos = useSelector(selectors.selectWithDueDate);\n\n  return (\n    <div>\n      {todos.length > 0 ? (\n        todos.map((value, index, array) => (\n          <React.Fragment key={value.id}>\n            {value.formatedDueDate !== array[index - 1]?.formatedDueDate ? (\n              <Typography className={classes.dueDate} variant=\"h5\">\n                {value.formatedDueDate}\n              </Typography>\n            ) : null}\n\n            <Todo key={value.id} {...value} />\n          </React.Fragment>\n        ))\n      ) : (\n        <div className={classes.iconContainer}>\n          <img className={classes.icon} src={happyIcon} />\n          <Typography variant=\"h4\">All done, you're awesome!</Typography>\n          <Typography className={classes.iconCredits} color=\"secondary\" variant=\"body2\">\n            Icon from{\" \"}\n            <a className={classes.iconCreditsLink} href=\"https://www.flaticon.com/free-icon/happy_2374630\" target=\"_blank\" rel=\"noreferrer\">\n              Flaticon\n            </a>\n          </Typography>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(Calendar);\n","C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\NavigationMenu\\index.tsx",[],"C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\Overview\\index.tsx",[],"C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\Todo\\index.tsx",["64","65"],"import {Accordion, AccordionDetails, AccordionSummary, Box, Button, Checkbox, Grid, Input, MenuItem, TextField, Typography} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\nimport {format} from \"date-fns\";\nimport React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {actions} from \"../redux/todos\";\nimport {dateFormat, Todo as TodoClass, TTodoPriority} from \"../types\";\nimport {useStyles} from \"./styles\";\n\nfunction Todo({id, title, description, completionDate, dueDate, priority}: TodoClass) {\n  const dispatch = useDispatch();\n\n  const remove = React.useCallback(() => dispatch(actions.remove(id)), [id]);\n  const update = React.useCallback((changes: any) => dispatch(actions.update({id: id, changes})), [id]);\n\n  const overdue = React.useMemo(() => Boolean(dueDate && new Date() > new Date(dueDate)), [dueDate]);\n  const classes = useStyles({overdue, priority});\n\n  return (\n    <Box className={classes.root}>\n      <Accordion className={classes.accordion}>\n        <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\n          <div\n            className={classes.accordionSummaryContent}\n            onClick={(event) => event.stopPropagation()}\n            onFocus={(event) => event.stopPropagation()}\n          >\n            <Checkbox checked={!!completionDate} onChange={event => {\n              update({completionDate: event.target.checked ? new Date().toISOString() : undefined});\n            }}/>\n            <Input className={classes.title} fullWidth onChange={event => update({title: event.target.value})} value={title}/>\n            {dueDate ? (\n              <Typography className={classes.dueDate} variant=\"body2\">{format(new Date(dueDate), \"dd.MM.yyyy\")}</Typography>\n            ) : null}\n          </div>\n        </AccordionSummary>\n\n        <AccordionDetails className={classes.accordionDetails}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12} md={6}>\n              <TextField fullWidth label=\"Notes\" multiline onChange={event => update({description: event.target.value})} rows={5} value={description}/>\n            </Grid>\n            <Grid item xs={12} sm={12} md={3}>\n              <KeyboardDatePicker\n                disableToolbar\n                format={dateFormat}\n                fullWidth\n                label=\"Due date\"\n                onChange={date => {\n                  if (date?.getTime && !isNaN(date.getTime())) {\n                    update({dueDate: date.toISOString().split(\"T\")[0]});\n                  } else if (date === null) {\n                    update({dueDate: undefined});\n                  }\n                }}\n                // Otherwise, if undefined, it will default to today...\n                value={dueDate ? dueDate : null}\n                variant=\"inline\"\n              />\n            </Grid>\n            <Grid className={classes.priorityAndButton} item xs={12} sm={12} md={3}>\n              <TextField fullWidth label=\"Priority\" select value={priority} onChange={event => update({priority: parseInt(event.target.value) as TTodoPriority})}>\n                <MenuItem value={TTodoPriority.NONE}>None</MenuItem>\n                <MenuItem value={TTodoPriority.LOW}>Low</MenuItem>\n                <MenuItem value={TTodoPriority.MEDIUM}>Medium</MenuItem>\n                <MenuItem value={TTodoPriority.HIGH}>High</MenuItem>\n              </TextField>\n\n              <Button className={classes.deleteButton} onClick={remove}>Delete</Button>\n            </Grid>\n          </Grid>\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n}\n\nexport default React.memo(Todo);\n","C:\\Users\\ababe\\Documents\\GitHub\\todo-react-redux\\src\\Todo\\styles.ts",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":55,"column":11,"nodeType":"72","endLine":55,"endColumn":59},{"ruleId":"73","severity":1,"message":"74","line":14,"column":72,"nodeType":"75","endLine":14,"endColumn":76,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"74","line":15,"column":99,"nodeType":"75","endLine":15,"endColumn":103,"suggestions":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["80"],["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"82","fix":"84"},"Update the dependencies array to be: [dispatch, id]",{"range":"85","text":"86"},{"range":"87","text":"86"},[710,714],"[dispatch, id]",[815,819]]