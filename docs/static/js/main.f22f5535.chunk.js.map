{"version":3,"sources":["types.ts","redux/initialState.ts","redux/todos.ts","redux/labels.ts","Labels/LabelsPreview.tsx","Labels/LabelsSelect.tsx","Todo/styles.ts","Todo/index.tsx","Calendar/happy.svg","Calendar/index.tsx","routes.ts","NavigationMenu/index.tsx","Overview/index.tsx","App.tsx","redux/store.ts","reportWebVitals.ts","theme.ts","index.tsx"],"names":["TTodoPriority","Label","id","undefined","title","this","nanoid","dateFormat","Todo","description","creationDate","dueDate","priority","NONE","completionDate","labels","Date","toISOString","labelsInitialState","todosInitialState","HIGH","MEDIUM","LOW","applyDueDateSorting","a","b","getTime","Infinity","todosAdapter","createEntityAdapter","sortComparer","completionSorting","isNaN","prioritySorting","dueDateSorting","emptyInitialState","getInitialState","filledState","upsertMany","createSlice","name","initialState","reducers","create","prepare","partialTodo","payload","reducer","addOne","update","updateOne","remove","removeOne","todosActions","actions","todosReducer","defaultSelectors","getSelectors","state","todos","selectAll","createDraftSafeSelector","labelId","filter","value","includes","selectAllIncomplete","selectWithDueDate","sort","map","formatedDueDate","format","todosSelectors","labelsAdapter","toLocaleLowerCase","localeCompare","labelsReducer","selectByIds","selectEntities","selectIds","ids","entities","idsOrder","idsToPick","reduce","acc","val","push","labelsSelectors","useStyles","makeStyles","theme","label","marginLeft","spacing","LabelsPreview","classes","useSelector","Chip","className","React","memo","LabelsSelect","SelectProps","rest","TextField","fullWidth","select","multiple","MenuItem","root","marginBottom","accordion","position","overflow","background","palette","success","light","info","error","content","height","left","top","width","accordionDetails","paddingTop","accordionSummaryContent","alignItems","display","flex","margin","borderColor","color","overdue","text","secondary","paddingLeft","dispatch","useDispatch","useCallback","changes","useMemo","Boolean","Box","Accordion","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","onClick","event","stopPropagation","onFocus","Checkbox","checked","onChange","target","Input","Hidden","smDown","Typography","variant","AccordionDetails","Grid","container","item","xs","sm","md","multiline","rows","disableToolbar","date","split","parseInt","Button","marginTop","iconContainer","textAlign","icon","iconCredits","fontSize","opacity","iconCreditsLink","Calendar","length","index","array","Fragment","src","happyIcon","href","rel","routes","path","to","nested","linkActive","action","selected","NavigationMenu","useState","open","setOpen","List","component","ListItem","button","NavLink","exact","activeClassName","ListItemText","primary","Collapse","in","timeout","disablePadding","textfield","Overview","useParams","selectById","newTodoTitle","setNewTodoTitle","showDone","setShowDone","finishedCount","onKeyPress","key","placeholder","InputProps","startAdornment","InputAdornment","endAdornment","size","startIcon","appContainer","appBar","zIndex","drawer","drawerOpen","transition","transitions","easing","easeOut","duration","enteringScreen","drawerClose","sharp","leavingScreen","drawerPaper","link","textDecoration","App","useTheme","matches","useMediaQuery","breakpoints","up","noSsr","setDrawerOpen","useEffect","Container","disableGutters","CssBaseline","AppBar","Toolbar","IconButton","edge","Drawer","anchor","paper","m","store","configureStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","type","props","MuiTextField","MuiButton","MuiSelect","MenuProps","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","ReactDOM","render","StrictMode","ThemeProvider","utils","DateFnsUtils","document","getElementById"],"mappings":"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","file":"static/js/main.f22f5535.chunk.js","sourcesContent":["import { nanoid } from \"@reduxjs/toolkit\";\r\n\r\nexport class Label {\r\n  id: string;\r\n  title: string;\r\n  // TODO add a `color?: string;` property\r\n\r\n  constructor({ id = undefined, title = \"\" }: Partial<Label>) {\r\n    this.id = id ?? nanoid();\r\n    this.title = title;\r\n  }\r\n}\r\n\r\nexport type TList = {\r\n  id: string;\r\n  name: string;\r\n  creationDate: Date | string;\r\n};\r\n\r\nexport enum TTodoPriority {\r\n  NONE = 0,\r\n  LOW = 1,\r\n  MEDIUM = 2,\r\n  HIGH = 3,\r\n}\r\n\r\nexport const dateFormat = \"dd.MM.yyyy\";\r\n\r\nexport class Todo {\r\n  id: string;\r\n  title: string;\r\n  description?: string;\r\n  creationDate: Date | string;\r\n  dueDate?: Date | string;\r\n  priority: TTodoPriority;\r\n  completionDate?: Date | string;\r\n  labels: Array<Label[\"id\"]>;\r\n\r\n  constructor({ id = undefined, title = \"\", description = \"\", creationDate = undefined, dueDate = undefined, priority = TTodoPriority.NONE, completionDate = undefined, labels = [] }: Partial<Todo>) {\r\n    this.id = id ?? nanoid();\r\n    this.title = title;\r\n    this.description = description;\r\n    this.creationDate = creationDate ?? new Date().toISOString();\r\n    this.dueDate = dueDate;\r\n    this.priority = priority;\r\n    this.completionDate = completionDate;\r\n    this.labels = labels;\r\n  }\r\n}\r\n","import { Label, Todo, TTodoPriority } from \"../types\";\r\n\r\nexport const labelsInitialState: Label[] = [{ ...new Label({ id: \"oYS6jCV-9_r6-gApwP-a0\", title: \"Work\" }) }, { ...new Label({ id: \"6upNOC-XWS_LKn0Cdcgc_\", title: \"Leisure\" }) }, { ...new Label({ id: \"HrlBY9eBGad8ShNV5XWry\", title: \"Personal\" }) }];\r\n\r\nexport const todosInitialState: Todo[] = [\r\n  { ...new Todo({ description: \"It is imperative\", title: \"Make this app work\", priority: TTodoPriority.HIGH, dueDate: \"2021-04-27\", labels: [labelsInitialState[0].id] }) },\r\n  { ...new Todo({ description: \"Maybe play some video games?\", title: \"Relax a bit\", dueDate: \"2021-04-12\", labels: [labelsInitialState[1].id] }) },\r\n  { ...new Todo({ title: \"Have some fun\" }) },\r\n  { ...new Todo({ title: \"Workout!\", priority: TTodoPriority.MEDIUM, labels: [labelsInitialState[2].id] }) },\r\n  { ...new Todo({ title: \"Do the laundry\", dueDate: \"2021-04-16\" }) },\r\n  { ...new Todo({ description: \"Just a bit\", title: \"Try to document it\", priority: TTodoPriority.LOW, dueDate: \"2021-04-16\", labels: [labelsInitialState[0].id, labelsInitialState[1].id] }) },\r\n  { ...new Todo({ description: \"Hello!\", title: \"Publish this on GitHub\", completionDate: \"2021-04-09T18:28:39.266Z\" }) },\r\n];\r\n","import { createDraftSafeSelector, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport { format } from \"date-fns\";\r\n\r\nimport { dateFormat, Label, Todo } from \"../types\";\r\nimport { todosInitialState } from \"./initialState\";\r\nimport { TState } from \"./store\";\r\n\r\nconst applyDueDateSorting = (a: Todo, b: Todo) => (a.dueDate ? new Date(a.dueDate).getTime() : Infinity) - (b.dueDate ? new Date(b.dueDate).getTime() : Infinity);\r\n\r\nconst todosAdapter = createEntityAdapter<Todo>({\r\n  sortComparer: (a, b) => {\r\n    // TODO I can reuse applyDueDateSorting if i make it generic: (a, b, dateFieldName) but my TypeScript skills don't allow me :(\r\n    const completionSorting = (a.completionDate ? new Date(a.completionDate).getTime() : Infinity) - (b.completionDate ? new Date(b.completionDate).getTime() : Infinity);\r\n    if (completionSorting !== 0 && !isNaN(completionSorting)) return -1 * completionSorting;\r\n\r\n    // Start and sort by priority\r\n    const prioritySorting = b.priority - a.priority;\r\n    if (prioritySorting !== 0) return prioritySorting;\r\n\r\n    // Sort by due date, if they have the same priority\r\n    const dueDateSorting = applyDueDateSorting(a, b);\r\n    // Infinify - Infiniy === NaN\r\n    if (dueDateSorting !== 0 && !isNaN(dueDateSorting)) return dueDateSorting;\r\n\r\n    // Finally, sort by creation date (the newest one is at the bottom), if they have the same due date\r\n    const creationDateSorting = new Date(a.creationDate).getTime() - new Date(b.creationDate).getTime();\r\n    return creationDateSorting;\r\n  },\r\n});\r\n\r\nconst emptyInitialState = todosAdapter.getInitialState();\r\nconst filledState = todosAdapter.upsertMany(emptyInitialState, todosInitialState);\r\n\r\nexport const { actions: todosActions, reducer: todosReducer } = createSlice({\r\n  name: \"todos\",\r\n  initialState: filledState,\r\n  reducers: {\r\n    create: {\r\n      prepare(partialTodo: Partial<Todo>) {\r\n        const payload = new Todo(partialTodo);\r\n        // \"Class instances are by definition not fully serializable\"\r\n        // See https://stackoverflow.com/questions/61704805/getting-an-error-a-non-serializable-value-was-detected-in-the-state-when-using\r\n        return { payload: { ...payload } };\r\n      },\r\n      reducer: todosAdapter.addOne,\r\n    },\r\n    update: todosAdapter.updateOne,\r\n    remove: todosAdapter.removeOne,\r\n  },\r\n});\r\n\r\nconst defaultSelectors = todosAdapter.getSelectors((state: TState) => state.todos);\r\n\r\nconst selectAll = createDraftSafeSelector([defaultSelectors.selectAll, (state: any, labelId?: Label[\"id\"]) => labelId], (state, labelId) => (labelId ? state.filter((value) => value.labels.includes(labelId)) : state));\r\n\r\nconst selectAllIncomplete = createDraftSafeSelector(selectAll, (state) => state.filter((value) => !value.completionDate));\r\n\r\nconst selectWithDueDate = createDraftSafeSelector(selectAllIncomplete, (state) =>\r\n  state\r\n    .filter((value) => value.dueDate)\r\n    .sort(applyDueDateSorting)\r\n    .map((value) => ({ ...value, formatedDueDate: format(new Date(value.dueDate as string), dateFormat) }))\r\n);\r\n\r\nexport const todosSelectors = { ...defaultSelectors, selectAll, selectAllIncomplete, selectWithDueDate };\r\n","import { createDraftSafeSelector, createEntityAdapter, createSlice, EntityId } from '@reduxjs/toolkit';\r\n\r\nimport { Label } from '../types';\r\nimport { labelsInitialState } from './initialState';\r\nimport { TState } from './store';\r\n\r\nconst labelsAdapter = createEntityAdapter<Label>({\r\n  sortComparer: (a, b) => a.title.toLocaleLowerCase().localeCompare(b.title.toLocaleLowerCase()),\r\n});\r\n\r\nconst emptyInitialState = labelsAdapter.getInitialState();\r\nconst filledState = labelsAdapter.upsertMany(emptyInitialState, labelsInitialState);\r\n\r\n// TODO LabelsActions will be used in the \"Labels Management\" Route\r\nexport const { actions: labelsActions, reducer: labelsReducer } = createSlice({\r\n  name: \"labels\",\r\n  initialState: filledState,\r\n  reducers: {\r\n    create: {\r\n      prepare({ title }) {\r\n        const payload = new Label({ title });\r\n        // \"Class instances are by definition not fully serializable\"\r\n        // See https://stackoverflow.com/questions/61704805/getting-an-error-a-non-serializable-value-was-detected-in-the-state-when-using\r\n        return { payload: { ...payload } };\r\n      },\r\n      reducer: labelsAdapter.addOne,\r\n    },\r\n    remove: labelsAdapter.removeOne,\r\n  },\r\n});\r\n\r\nconst defaultSelectors = labelsAdapter.getSelectors((state: TState) => state.labels);\r\n\r\nconst selectByIds = createDraftSafeSelector([defaultSelectors.selectEntities, defaultSelectors.selectIds, (state: any, ids: EntityId[]) => ids], (entities, idsOrder, idsToPick) => {\r\n  return idsOrder.reduce((acc, val) => {\r\n    if (idsToPick.includes(val)) acc.push(entities[val] as Label);\r\n\r\n    return acc;\r\n  }, [] as Label[]);\r\n});\r\n\r\nexport const labelsSelectors = { ...defaultSelectors, selectByIds };\r\n","import { Chip, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { labelsSelectors } from '../redux/labels';\r\nimport { TState } from '../redux/store';\r\nimport { Todo } from '../types';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  label: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction LabelsPreview({ value }: { value: Todo[\"labels\"] }) {\r\n  const classes = useStyles();\r\n  const labels = useSelector((state: TState) => labelsSelectors.selectByIds(state, value));\r\n\r\n  return (\r\n    <>\r\n      {labels.map((label) => (\r\n        <Chip className={classes.label} label={label.title} key={label.id} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(LabelsPreview);\r\n","import { MenuItem, TextField, TextFieldProps } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { labelsSelectors } from '../redux/labels';\r\n\r\nfunction LabelsSelect({ SelectProps, ...rest }: Partial<TextFieldProps>) {\r\n  const labels = useSelector(labelsSelectors.selectAll);\r\n\r\n  return (\r\n    <TextField fullWidth label=\"Labels\" select SelectProps={{ multiple: true, ...SelectProps }} {...rest}>\r\n      {labels.map((label) => (\r\n        <MenuItem key={label.id} value={label.id}>\r\n          {label.title}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n}\r\n\r\nexport default React.memo(LabelsSelect);\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nimport { TTodoPriority } from \"../types\";\r\n\r\ntype Props = { overdue: boolean; priority: TTodoPriority };\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  accordion: {\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n\r\n    \"&:after\": {\r\n      background: ({ priority }: Props) => {\r\n        if (priority === TTodoPriority.LOW) return theme.palette.success.light;\r\n        if (priority === TTodoPriority.MEDIUM) return theme.palette.info.light;\r\n        if (priority === TTodoPriority.HIGH) return theme.palette.error.light;\r\n\r\n        return \"none\";\r\n      },\r\n      content: '\"\"',\r\n      height: \"100%\",\r\n      left: 0,\r\n      position: \"absolute\",\r\n      top: 0,\r\n      width: 5,\r\n    },\r\n  },\r\n  accordionDetails: {\r\n    paddingTop: 0,\r\n  },\r\n  accordionSummaryContent: {\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    flex: 1,\r\n  },\r\n  title: {\r\n    margin: 0,\r\n\r\n    \"&:before\": {\r\n      borderColor: \"transparent\",\r\n    },\r\n  },\r\n  dueDate: {\r\n    color: ({ overdue }: Props) => (overdue ? theme.palette.error.light : theme.palette.text.secondary),\r\n    paddingLeft: theme.spacing(1),\r\n  },\r\n}));\r\n","import { Accordion, AccordionDetails, AccordionSummary, Box, Button, Checkbox, Grid, Hidden, Input, MenuItem, TextField, Typography } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { format } from 'date-fns';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport LabelsPreview from '../Labels/LabelsPreview';\r\nimport LabelsSelect from '../Labels/LabelsSelect';\r\nimport { todosActions } from '../redux/todos';\r\nimport { dateFormat, Todo as TodoClass, TTodoPriority } from '../types';\r\nimport { useStyles } from './styles';\r\n\r\nfunction Todo({ id, title, description, completionDate, dueDate, labels, priority }: TodoClass) {\r\n  const dispatch = useDispatch();\r\n\r\n  const remove = React.useCallback(() => dispatch(todosActions.remove(id)), [id]);\r\n  const update = React.useCallback((changes: any) => dispatch(todosActions.update({ id: id, changes })), [id]);\r\n\r\n  const overdue = React.useMemo(() => Boolean(dueDate && new Date() > new Date(dueDate)), [dueDate]);\r\n  const classes = useStyles({ overdue, priority });\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Accordion className={classes.accordion} TransitionProps={{ unmountOnExit: true }}>\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n          <div className={classes.accordionSummaryContent} onClick={(event) => event.stopPropagation()} onFocus={(event) => event.stopPropagation()}>\r\n            <Checkbox\r\n              checked={!!completionDate}\r\n              onChange={(event) => {\r\n                update({ completionDate: event.target.checked ? new Date().toISOString() : undefined });\r\n              }}\r\n            />\r\n            <Input className={classes.title} fullWidth onChange={(event) => update({ title: event.target.value })} value={title} />\r\n            <Hidden smDown>\r\n              <LabelsPreview value={labels} />\r\n            </Hidden>\r\n            {dueDate ? (\r\n              <Typography className={classes.dueDate} variant=\"body2\">\r\n                {format(new Date(dueDate), \"dd.MM.yyyy\")}\r\n              </Typography>\r\n            ) : null}\r\n          </div>\r\n        </AccordionSummary>\r\n\r\n        <AccordionDetails className={classes.accordionDetails}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n              <TextField fullWidth label=\"Notes\" multiline onChange={(event) => update({ description: event.target.value })} rows={8} value={description} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    format={dateFormat}\r\n                    fullWidth\r\n                    label=\"Due date\"\r\n                    onChange={(date) => {\r\n                      if (date?.getTime && !isNaN(date.getTime())) {\r\n                        update({ dueDate: date.toISOString().split(\"T\")[0] });\r\n                      } else if (date === null) {\r\n                        update({ dueDate: undefined });\r\n                      }\r\n                    }}\r\n                    // Otherwise, if undefined, it will default to today...\r\n                    value={dueDate ? dueDate : null}\r\n                    variant=\"inline\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  <TextField fullWidth label=\"Priority\" select value={priority} onChange={(event) => update({ priority: parseInt(event.target.value) as TTodoPriority })}>\r\n                    <MenuItem value={TTodoPriority.NONE}>None</MenuItem>\r\n                    <MenuItem value={TTodoPriority.LOW}>Low</MenuItem>\r\n                    <MenuItem value={TTodoPriority.MEDIUM}>Medium</MenuItem>\r\n                    <MenuItem value={TTodoPriority.HIGH}>High</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                  <LabelsSelect onChange={(event) => update({ labels: event.target.value })} value={labels} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                  <Button onClick={remove}>Delete</Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default React.memo(Todo);\r\n","export default __webpack_public_path__ + \"static/media/happy.96f71ab0.svg\";","import { makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { todosSelectors } from '../redux/todos';\r\nimport Todo from '../Todo';\r\nimport happyIcon from './happy.svg';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  dueDate: {\r\n    marginLeft: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n    marginTop: theme.spacing(3),\r\n\r\n    \"&:first-of-type\": {\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  iconContainer: {\r\n    textAlign: \"center\",\r\n  },\r\n  icon: {\r\n    height: 250,\r\n    margin: `${theme.spacing(5)}px 0`,\r\n  },\r\n  iconCredits: {\r\n    color: theme.palette.text.secondary,\r\n    fontSize: 10,\r\n    opacity: 0.25,\r\n  },\r\n  iconCreditsLink: {\r\n    color: `${theme.palette.text.secondary} !important`,\r\n  },\r\n}));\r\n\r\nfunction Calendar() {\r\n  const classes = useStyles();\r\n  const todos = useSelector(todosSelectors.selectWithDueDate);\r\n\r\n  return (\r\n    <div>\r\n      {todos.length > 0 ? (\r\n        todos.map((value, index, array) => (\r\n          <React.Fragment key={value.id}>\r\n            {value.formatedDueDate !== array[index - 1]?.formatedDueDate ? (\r\n              <Typography className={classes.dueDate} variant=\"h5\">\r\n                {value.formatedDueDate}\r\n              </Typography>\r\n            ) : null}\r\n\r\n            <Todo key={value.id} {...value} />\r\n          </React.Fragment>\r\n        ))\r\n      ) : (\r\n        <div className={classes.iconContainer}>\r\n          <img className={classes.icon} src={happyIcon} />\r\n          <Typography variant=\"h4\">All done, you're awesome!</Typography>\r\n          <Typography className={classes.iconCredits} color=\"secondary\" variant=\"body2\">\r\n            Icon from{\" \"}\r\n            <a className={classes.iconCreditsLink} href=\"https://www.flaticon.com/free-icon/happy_2374630\" target=\"_blank\" rel=\"noreferrer\">\r\n              Flaticon\r\n            </a>\r\n          </Typography>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Calendar);\r\n","export const routes = {\r\n  overview: \"/\",\r\n  calendar: \"/calendar\",\r\n  label: {\r\n    path: `/label/:id`,\r\n    to: (label: string) => `/label/${label}`,\r\n  },\r\n};\r\n","import { Collapse, List, ListItem, ListItemText, makeStyles } from \"@material-ui/core\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { labelsSelectors } from \"../redux/labels\";\r\nimport { routes } from \"../routes\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  linkActive: {\r\n    background: theme.palette.action.selected,\r\n  },\r\n}));\r\n\r\nfunction NavigationMenu() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const labels = useSelector(labelsSelectors.selectAll);\r\n\r\n  return (\r\n    <List component=\"nav\">\r\n      <ListItem button component={NavLink} exact to={routes.overview} activeClassName={classes.linkActive}>\r\n        <ListItemText primary=\"Overview\" />\r\n      </ListItem>\r\n\r\n      <ListItem button component={NavLink} to={routes.calendar} activeClassName={classes.linkActive}>\r\n        <ListItemText primary=\"Calendar\" />\r\n      </ListItem>\r\n\r\n      <ListItem button onClick={() => setOpen(!open)}>\r\n        <ListItemText primary=\"Labels\" />\r\n        {open ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n      </ListItem>\r\n\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <List component=\"div\" disablePadding>\r\n          {labels.map((label) => (\r\n            <ListItem button component={NavLink} to={routes.label.to(label.id)} className={classes.nested} activeClassName={classes.linkActive} key={label.id}>\r\n              <ListItemText secondary={label.title} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Collapse>\r\n\r\n      {/* \r\n      <ListItem button>\r\n        <ListItemText primary=\"Statistics\" secondary=\"Coming soon...\" />\r\n      </ListItem>\r\n      */}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default React.memo(NavigationMenu);\r\n","import { Button, Grid, InputAdornment, makeStyles, TextField } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { labelsSelectors } from \"../redux/labels\";\r\n\r\nimport { TState } from \"../redux/store\";\r\nimport { todosActions, todosSelectors } from \"../redux/todos\";\r\nimport Todo from \"../Todo\";\r\n\r\nexport const useStyles = makeStyles({\r\n  textfield: {\r\n    margin: 0,\r\n  },\r\n  button: {\r\n    height: \"100%\",\r\n  },\r\n});\r\n\r\nfunction Overview() {\r\n  const classes = useStyles();\r\n\r\n  const { id: labelId } = useParams<{ id: string }>();\r\n  const label = useSelector((state: TState) => labelsSelectors.selectById(state, labelId));\r\n\r\n  const [newTodoTitle, setNewTodoTitle] = React.useState(\"\");\r\n  const [showDone, setShowDone] = React.useState(false);\r\n\r\n  // @ts-ignore - TS thinks that selectAll needs only 1 argument\r\n  const todos = useSelector((state: TState) => (showDone ? todosSelectors.selectAll(state, labelId) : todosSelectors.selectAllIncomplete(state, labelId)));\r\n  // @ts-ignore - TS thinks that selectAll needs only 1 argument\r\n  const finishedCount = useSelector((state: TState) => todosSelectors.selectAll(state, labelId).length - todosSelectors.selectAllIncomplete(state, labelId).length);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      {todos.map((value) => (\r\n        <Todo key={value.id} {...value} />\r\n      ))}\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={9} md={10}>\r\n          <TextField\r\n            className={classes.textfield}\r\n            fullWidth\r\n            onChange={(event) => setNewTodoTitle(event.target.value)}\r\n            onKeyPress={(event) => {\r\n              if (event.key === \"Enter\" && newTodoTitle.length > 0) {\r\n                const labels = labelId ? [labelId] : [];\r\n                dispatch(todosActions.create({ title: newTodoTitle, labels }));\r\n                setNewTodoTitle(\"\");\r\n              }\r\n            }}\r\n            placeholder=\"Plan something new\"\r\n            value={newTodoTitle}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <AddIcon/>\r\n                </InputAdornment>\r\n              ),\r\n              endAdornment: (label ? label.title : null)\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={3} md={2}>\r\n          <Button className={classes.button} fullWidth onClick={() => setShowDone(!showDone)} size=\"medium\" startIcon={showDone ? <VisibilityOffIcon/> : <VisibilityIcon/>} variant=\"text\">\r\n            Done ({finishedCount})\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Overview);\r\n","import { AppBar, Box, Container, CssBaseline, Drawer, IconButton, makeStyles, Toolbar, Typography, useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Calendar from \"./Calendar\";\r\nimport NavigationMenu from \"./NavigationMenu\";\r\nimport Overview from \"./Overview\";\r\nimport { routes } from \"./routes\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appContainer: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawerOpen: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    width: drawerWidth,\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  link: {\r\n    color: \"#ffffff\",\r\n    textDecoration: \"none\",\r\n  },\r\n  linkActive: {\r\n    textDecoration: \"underline\",\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.up(\"md\"), {\r\n    noSsr: true,\r\n  });\r\n\r\n  const [drawerOpen, setDrawerOpen] = React.useState(matches);\r\n\r\n  React.useEffect(() => setDrawerOpen(matches), [matches]);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.appContainer} disableGutters>\r\n      <CssBaseline />\r\n\r\n      <AppBar className={classes.appBar} position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton onClick={() => setDrawerOpen(!drawerOpen)} edge=\"start\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">GNOME-ish Todo</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer anchor=\"left\" classes={{ root: drawerOpen ? classes.drawerOpen : classes.drawerClose, paper: classes.drawerPaper }} open={drawerOpen} variant=\"persistent\">\r\n        <Toolbar />\r\n\r\n        <NavigationMenu />\r\n      </Drawer>\r\n\r\n      <Box m={3} width=\"100%\">\r\n        <Toolbar />\r\n\r\n        <Switch>\r\n          <Route exact path={routes.overview}>\r\n            <Overview />\r\n          </Route>\r\n          <Route path={routes.calendar}>\r\n            <Calendar />\r\n          </Route>\r\n          <Route path={routes.label.path}>\r\n            <Overview />\r\n          </Route>\r\n        </Switch>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { labelsReducer } from './labels';\r\nimport { todosReducer } from './todos';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    labels: labelsReducer,\r\n    todos: todosReducer,\r\n  },\r\n});\r\n\r\nexport type TState = ReturnType<typeof store.getState>;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n  props: {\r\n    MuiTextField: {\r\n      margin: \"dense\",\r\n      variant: \"outlined\",\r\n    },\r\n    MuiButton: {\r\n      size: \"small\",\r\n      variant: \"outlined\",\r\n    },\r\n    MuiSelect: {\r\n      MenuProps: {\r\n        variant: \"menu\",\r\n        getContentAnchorEl: null,\r\n        anchorOrigin: {\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        },\r\n        transformOrigin: {\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n","import 'fontsource-roboto';\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider as StoreProvider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport { store } from './redux/store';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { theme } from './theme';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StoreProvider store={store}>\r\n      <HashRouter>\r\n        <ThemeProvider theme={theme}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <App />\r\n          </MuiPickersUtilsProvider>\r\n        </ThemeProvider>\r\n      </HashRouter>\r\n    </StoreProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}