{"version":3,"sources":["types.ts","redux/initialState.ts","redux/todos.ts","Todo/styles.ts","Todo/index.tsx","Calendar/happy.svg","Calendar/index.tsx","routes.ts","NavigationMenu/index.tsx","Overview/index.tsx","App.tsx","redux/store.ts","reportWebVitals.ts","theme.ts","index.tsx"],"names":["TTodoPriority","dateFormat","Todo","id","undefined","title","description","creationDate","dueDate","priority","NONE","completionDate","this","nanoid","Date","toISOString","initialState","HIGH","MEDIUM","LOW","applyDueDateSorting","a","b","getTime","Infinity","todosAdapter","createEntityAdapter","sortComparer","completionSorting","isNaN","prioritySorting","dueDateSorting","emptyInitialState","getInitialState","filledState","upsertMany","createSlice","name","reducers","create","prepare","partialTodo","payload","reducer","addOne","update","updateOne","remove","removeOne","actions","defaultSelectors","getSelectors","selectAllIncomplete","createDraftSafeSelector","selectAll","state","filter","value","selectWithDueDate","sort","map","formatedDueDate","format","selectors","useStyles","makeStyles","theme","root","marginBottom","spacing","accordion","position","overflow","background","palette","success","light","info","error","content","height","left","top","width","accordionDetails","paddingTop","accordionSummaryContent","alignItems","display","flex","margin","borderColor","color","overdue","text","secondary","paddingLeft","priorityAndButton","flexDirection","justifyContent","deleteButton","marginTop","dispatch","useDispatch","React","useCallback","changes","useMemo","Boolean","classes","Box","className","Accordion","AccordionSummary","expandIcon","onClick","event","stopPropagation","onFocus","Checkbox","checked","onChange","target","Input","fullWidth","Typography","variant","AccordionDetails","Grid","container","item","xs","sm","md","TextField","label","multiline","rows","disableToolbar","date","split","select","parseInt","MenuItem","Button","memo","marginLeft","iconContainer","textAlign","icon","iconCredits","fontSize","opacity","iconCreditsLink","Calendar","todos","useSelector","length","index","array","Fragment","src","happyIcon","href","rel","routes","nested","linkActive","action","selected","NavigationMenu","List","component","ListItem","button","NavLink","exact","to","activeClassName","ListItemText","primary","textfield","Overview","useState","newTodoTitle","setNewTodoTitle","showDone","setShowDone","finishedCount","onKeyPress","key","placeholder","InputProps","startAdornment","InputAdornment","size","startIcon","appContainer","appBar","zIndex","drawer","drawerOpen","transition","transitions","easing","easeOut","duration","enteringScreen","drawerClose","sharp","leavingScreen","drawerPaper","link","textDecoration","App","setDrawerOpen","Container","disableGutters","CssBaseline","AppBar","Toolbar","IconButton","edge","Drawer","anchor","paper","open","m","path","store","configureStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","type","props","MuiTextField","MuiButton","ReactDOM","render","StrictMode","ThemeProvider","utils","DateFnsUtils","document","getElementById"],"mappings":"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","file":"static/js/main.f02a76b4.chunk.js","sourcesContent":["import {nanoid} from \"@reduxjs/toolkit\";\n\nexport type TList = {\n  id: string;\n  name: string;\n  creationDate: Date | string;\n}\n\nexport enum TTodoPriority {\n  NONE = 0,\n  LOW = 1,\n  MEDIUM = 2,\n  HIGH = 3\n}\n\nexport const dateFormat = \"dd.MM.yyyy\";\n\nexport class Todo {\n  id: string;\n  title: string;\n  description?: string;\n  creationDate: Date | string;\n  dueDate?: Date | string;\n  priority: TTodoPriority;\n  completionDate?: Date | string;\n\n  constructor({id = undefined, title = \"\", description = \"\", creationDate = undefined, dueDate = undefined, priority = TTodoPriority.NONE, completionDate = undefined}: Partial<Todo>) {\n    this.id = id ?? nanoid();\n    this.title = title;\n    this.description = description;\n    this.creationDate = creationDate ?? new Date().toISOString();\n    this.dueDate = dueDate;\n    this.priority = priority;\n    this.completionDate = completionDate;\n  }\n}\n","import {Todo, TTodoPriority} from \"../types\";\n\nexport const initialState: Todo[] = [\n  {...new Todo({description: \"It is imperative\", title: \"Make this app work\", priority: TTodoPriority.HIGH, dueDate: \"2021-02-27\"})},\n  {...new Todo({description: \"Maybe play some video games?\", title: \"Relax a bit\", dueDate: \"2021-02-12\"})},\n  {...new Todo({title: \"Have some fun\"})},\n  {...new Todo({title: \"Workout!\", priority: TTodoPriority.MEDIUM})},\n  {...new Todo({title: \"Do the laundry\", dueDate: \"2021-02-16\"})},\n  {...new Todo({description: \"Just a bit\", title: \"Try to document it\", priority: TTodoPriority.LOW, dueDate: \"2021-02-16\"})},\n  {...new Todo({description: \"Hello!\", title: \"Publish this on GitHub\", completionDate: \"2021-02-09T18:28:39.266Z\"})},\n];\n","import {createDraftSafeSelector, createEntityAdapter, createSlice} from \"@reduxjs/toolkit\";\nimport {format} from \"date-fns\";\nimport {dateFormat, Todo} from \"../types\";\nimport {initialState} from \"./initialState\";\n\nconst applyDueDateSorting = (a: Todo, b: Todo) => (a.dueDate ? new Date(a.dueDate).getTime() : Infinity) - (b.dueDate ? new Date(b.dueDate).getTime() : Infinity);\n\nconst todosAdapter = createEntityAdapter<Todo>({\n  sortComparer: (a, b) => {\n    // TODO I can reuse applyDueDateSorting if i make it generic: (a, b, dateFieldName) but my TypeScript skills don't allow me :(\n    const completionSorting = (a.completionDate ? new Date(a.completionDate).getTime() : Infinity) - (b.completionDate ? new Date(b.completionDate).getTime() : Infinity);\n    if (completionSorting !== 0 && !isNaN(completionSorting)) return -1 * completionSorting;\n\n    // Start and sort by priority\n    const prioritySorting = b.priority - a.priority;\n    if (prioritySorting !== 0) return prioritySorting;\n\n    // Sort by due date, if they have the same priority\n    const dueDateSorting = applyDueDateSorting(a, b);\n    // Infinify - Infiniy === NaN\n    if (dueDateSorting !== 0 && !isNaN(dueDateSorting)) return dueDateSorting;\n\n    // Finally, sort by creation date (the newest one is at the bottom), if they have the same due date\n    const creationDateSorting = new Date(a.creationDate).getTime() - new Date(b.creationDate).getTime();\n    return creationDateSorting;\n  },\n});\n\nconst emptyInitialState = todosAdapter.getInitialState();\nconst filledState = todosAdapter.upsertMany(emptyInitialState, initialState);\n\nexport const {actions, reducer} = createSlice({\n  name: \"todos\",\n  initialState: filledState,\n  reducers: {\n    create: {\n      prepare(partialTodo: Partial<Todo>) {\n        const payload = new Todo(partialTodo);\n        // \"Class instances are by definition not fully serializable\"\n        // See https://stackoverflow.com/questions/61704805/getting-an-error-a-non-serializable-value-was-detected-in-the-state-when-using\n        return {payload: {...payload}};\n      },\n      reducer: todosAdapter.addOne\n    },\n    update: todosAdapter.updateOne,\n    remove: todosAdapter.removeOne,\n  },\n});\n\nconst defaultSelectors = todosAdapter.getSelectors();\n\nconst selectAllIncomplete = createDraftSafeSelector(\n  defaultSelectors.selectAll,\n  state => state\n    .filter(value => !value.completionDate)\n);\n\nconst selectWithDueDate = createDraftSafeSelector(\n  selectAllIncomplete,\n  state => state\n    .filter(value => value.dueDate)\n    .sort(applyDueDateSorting)\n    .map(value => ({...value, formatedDueDate: format(new Date(value.dueDate as string), dateFormat)}))\n);\n\nexport const selectors = {...defaultSelectors, selectAllIncomplete, selectWithDueDate};\n","import {makeStyles} from \"@material-ui/core\";\nimport {TTodoPriority} from \"../types\";\n\ntype Props = { overdue: boolean; priority: TTodoPriority };\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(2)\n  },\n  accordion: {\n    position: \"relative\",\n    overflow: \"hidden\",\n\n    \"&:after\": {\n      background: ({priority}: Props) => {\n        if (priority === TTodoPriority.LOW) return theme.palette.success.light;\n        if (priority === TTodoPriority.MEDIUM) return theme.palette.info.light;\n        if (priority === TTodoPriority.HIGH) return theme.palette.error.light;\n\n        return \"none\";\n      },\n      content: \"\\\"\\\"\",\n      height: \"100%\",\n      left: 0,\n      position: \"absolute\",\n      top: 0,\n      width: 5\n    }\n  },\n  accordionDetails: {\n    paddingTop: 0\n  },\n  accordionSummaryContent: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flex: 1,\n  },\n  title: {\n    margin: 0,\n\n    \"&:before\": {\n      borderColor: \"transparent\",\n    }\n  },\n  dueDate: {\n    color: ({overdue}: Props) => overdue ? theme.palette.error.light : theme.palette.text.secondary,\n    paddingLeft: theme.spacing(2)\n  },\n  priorityAndButton: {\n    alignItems: \"flex-end\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  deleteButton: {\n    marginTop: theme.spacing(2)\n  }\n}));\n","import {Accordion, AccordionDetails, AccordionSummary, Box, Button, Checkbox, Grid, Input, MenuItem, TextField, Typography} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\nimport {format} from \"date-fns\";\nimport React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {actions} from \"../redux/todos\";\nimport {dateFormat, Todo as TodoClass, TTodoPriority} from \"../types\";\nimport {useStyles} from \"./styles\";\n\nfunction Todo({id, title, description, completionDate, dueDate, priority}: TodoClass) {\n  const dispatch = useDispatch();\n\n  const remove = React.useCallback(() => dispatch(actions.remove(id)), [id]);\n  const update = React.useCallback((changes: any) => dispatch(actions.update({id: id, changes})), [id]);\n\n  const overdue = React.useMemo(() => Boolean(dueDate && new Date() > new Date(dueDate)), [dueDate]);\n  const classes = useStyles({overdue, priority});\n\n  return (\n    <Box className={classes.root}>\n      <Accordion className={classes.accordion}>\n        <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\n          <div\n            className={classes.accordionSummaryContent}\n            onClick={(event) => event.stopPropagation()}\n            onFocus={(event) => event.stopPropagation()}\n          >\n            <Checkbox checked={!!completionDate} onChange={event => {\n              update({completionDate: event.target.checked ? new Date().toISOString() : undefined});\n            }}/>\n            <Input className={classes.title} fullWidth onChange={event => update({title: event.target.value})} value={title}/>\n            {dueDate ? (\n              <Typography className={classes.dueDate} variant=\"body2\">{format(new Date(dueDate), \"dd.MM.yyyy\")}</Typography>\n            ) : null}\n          </div>\n        </AccordionSummary>\n\n        <AccordionDetails className={classes.accordionDetails}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12} md={6}>\n              <TextField fullWidth label=\"Notes\" multiline onChange={event => update({description: event.target.value})} rows={5} value={description}/>\n            </Grid>\n            <Grid item xs={12} sm={12} md={3}>\n              <KeyboardDatePicker\n                disableToolbar\n                format={dateFormat}\n                fullWidth\n                label=\"Due date\"\n                onChange={date => {\n                  if (date?.getTime && !isNaN(date.getTime())) {\n                    update({dueDate: date.toISOString().split(\"T\")[0]});\n                  } else if (date === null) {\n                    update({dueDate: undefined});\n                  }\n                }}\n                // Otherwise, if undefined, it will default to today...\n                value={dueDate ? dueDate : null}\n                variant=\"inline\"\n              />\n            </Grid>\n            <Grid className={classes.priorityAndButton} item xs={12} sm={12} md={3}>\n              <TextField fullWidth label=\"Priority\" select value={priority} onChange={event => update({priority: parseInt(event.target.value) as TTodoPriority})}>\n                <MenuItem value={TTodoPriority.NONE}>None</MenuItem>\n                <MenuItem value={TTodoPriority.LOW}>Low</MenuItem>\n                <MenuItem value={TTodoPriority.MEDIUM}>Medium</MenuItem>\n                <MenuItem value={TTodoPriority.HIGH}>High</MenuItem>\n              </TextField>\n\n              <Button className={classes.deleteButton} onClick={remove}>Delete</Button>\n            </Grid>\n          </Grid>\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n}\n\nexport default React.memo(Todo);\n","export default __webpack_public_path__ + \"static/media/happy.96f71ab0.svg\";","import { makeStyles, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectors } from \"../redux/todos\";\nimport Todo from \"../Todo\";\nimport happyIcon from \"./happy.svg\";\n\nexport const useStyles = makeStyles((theme) => ({\n  dueDate: {\n    marginLeft: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(3),\n\n    \"&:first-of-type\": {\n      marginTop: 0,\n    },\n  },\n  iconContainer: {\n    textAlign: \"center\",\n  },\n  icon: {\n    height: 250,\n    margin: `${theme.spacing(5)}px 0`,\n  },\n  iconCredits: {\n    color: theme.palette.text.secondary,\n    fontSize: 10,\n    opacity: 0.25,\n  },\n  iconCreditsLink: {\n    color: `${theme.palette.text.secondary} !important`,\n  },\n}));\n\nfunction Calendar() {\n  const classes = useStyles();\n  const todos = useSelector(selectors.selectWithDueDate);\n\n  return (\n    <div>\n      {todos.length > 0 ? (\n        todos.map((value, index, array) => (\n          <React.Fragment key={value.id}>\n            {value.formatedDueDate !== array[index - 1]?.formatedDueDate ? (\n              <Typography className={classes.dueDate} variant=\"h5\">\n                {value.formatedDueDate}\n              </Typography>\n            ) : null}\n\n            <Todo key={value.id} {...value} />\n          </React.Fragment>\n        ))\n      ) : (\n        <div className={classes.iconContainer}>\n          <img className={classes.icon} src={happyIcon} />\n          <Typography variant=\"h4\">All done, you're awesome!</Typography>\n          <Typography className={classes.iconCredits} color=\"secondary\" variant=\"body2\">\n            Icon from{\" \"}\n            <a className={classes.iconCreditsLink} href=\"https://www.flaticon.com/free-icon/happy_2374630\" target=\"_blank\" rel=\"noreferrer\">\n              Flaticon\n            </a>\n          </Typography>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(Calendar);\n","export const routes = {\n  overview: \"/\",\n  calendar: \"/calendar\"\n};\n","import { List, ListItem, ListItemText, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { routes } from \"../routes\";\n\nconst useStyles = makeStyles((theme) => ({\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  linkActive: {\n    background: theme.palette.action.selected,\n  },\n}));\n\nfunction NavigationMenu() {\n  const classes = useStyles();\n\n  return (\n    <List component=\"nav\">\n      <ListItem button component={NavLink} exact to={routes.overview} activeClassName={classes.linkActive}>\n        <ListItemText primary=\"Overview\" />\n      </ListItem>\n\n      <ListItem button component={NavLink} to={routes.calendar} activeClassName={classes.linkActive}>\n        <ListItemText primary=\"Calendar\" />\n      </ListItem>\n\n      {/*\n          <ListItem button onClick={() => setOpen(!open)}>\n            <ListItemText primary=\"Lists\"/>\n            {open ? <ExpandLessIcon/> : <ExpandMoreIcon/>}\n          </ListItem>\n\n          <Collapse in={open} timeout=\"auto\">\n            <List component=\"div\" disablePadding>\n              <ListItem button className={classes.nested}>\n                <ListItemText secondary=\"Personal\"/>\n              </ListItem>\n              <ListItem button className={classes.nested}>\n                <ListItemText secondary=\"Work\"/>\n              </ListItem>\n            </List>\n          </Collapse>\n\n\n        <ListItem button>\n          <ListItemText primary=\"Statistics\" secondary=\"Coming soon...\"/>\n        </ListItem>\n      */}\n    </List>\n  );\n}\n\nexport default React.memo(NavigationMenu);\n","import {Button, Grid, InputAdornment, makeStyles, TextField} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {TState} from \"../redux/store\";\nimport {actions, selectors} from \"../redux/todos\";\nimport Todo from \"../Todo\";\n\nexport const useStyles = makeStyles({\n  textfield: {\n    margin: 0\n  },\n  button: {\n    height: \"100%\"\n  }\n});\n\nfunction Overview() {\n  const classes = useStyles();\n\n  const [newTodoTitle, setNewTodoTitle] = React.useState(\"\");\n  const [showDone, setShowDone] = React.useState(false);\n\n  const todos = useSelector(showDone ? selectors.selectAll : selectors.selectAllIncomplete);\n  const finishedCount = useSelector((state: TState) => selectors.selectAll(state).length - selectors.selectAllIncomplete(state).length);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {todos.map(value => <Todo key={value.id} {...value} />)}\n\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={9} md={10}>\n          <TextField className={classes.textfield} fullWidth onChange={event => setNewTodoTitle(event.target.value)} onKeyPress={event => {\n            if (event.key === \"Enter\") {\n              dispatch(actions.create({title: newTodoTitle}));\n              setNewTodoTitle(\"\");\n            }\n          }} placeholder=\"Plan something new\" value={newTodoTitle} InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <AddIcon/>\n              </InputAdornment>\n            )\n          }}/>\n        </Grid>\n        <Grid item xs={12} sm={3} md={2}>\n          <Button className={classes.button} fullWidth onClick={() => setShowDone(!showDone)} size=\"medium\" startIcon={showDone ? <VisibilityOffIcon/> : <VisibilityIcon/>} variant=\"text\">\n            Done ({finishedCount})\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default React.memo(Overview);\n","import {AppBar, Box, Container, CssBaseline, Drawer, IconButton, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Calendar from \"./Calendar\";\nimport NavigationMenu from \"./NavigationMenu\";\nimport Overview from \"./Overview\";\nimport {routes} from \"./routes\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  appContainer: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawerOpen: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    width: drawerWidth\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: 0\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  link: {\n    color: \"#ffffff\",\n    textDecoration: \"none\"\n  },\n  linkActive: {\n    textDecoration: \"underline\"\n  },\n}));\n\nfunction App() {\n  const [drawerOpen, setDrawerOpen] = React.useState(true);\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.appContainer} disableGutters>\n      <CssBaseline/>\n\n      <AppBar className={classes.appBar} position=\"fixed\">\n        <Toolbar>\n          <IconButton onClick={() => setDrawerOpen(!drawerOpen)} edge=\"start\">\n            <MenuIcon/>\n          </IconButton>\n          <Typography variant=\"h6\">GNOME-ish Todo</Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer anchor=\"left\" classes={{root: drawerOpen ? classes.drawerOpen : classes.drawerClose, paper: classes.drawerPaper,}} open={drawerOpen} variant=\"persistent\">\n        <Toolbar/>\n\n        <NavigationMenu/>\n      </Drawer>\n\n      <Box m={3} width=\"100%\">\n        <Toolbar/>\n\n        <Switch>\n          <Route exact path={routes.overview}>\n            <Overview/>\n          </Route>\n          <Route path={routes.calendar}>\n            <Calendar/>\n          </Route>\n        </Switch>\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\nimport {reducer} from \"./todos\";\n\nexport const store = configureStore({\n  reducer\n});\n\nexport type TState = ReturnType<typeof store.getState>;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createMuiTheme} from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n  props: {\n    MuiTextField: {\n      margin: \"dense\",\n      variant: \"outlined\"\n    },\n    MuiButton: {\n      size: \"small\",\n      variant: \"outlined\"\n    }\n  }\n});\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport \"fontsource-roboto\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider as StoreProvider } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport { store } from \"./redux/store\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { theme } from \"./theme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StoreProvider store={store}>\r\n      <HashRouter>\r\n        <ThemeProvider theme={theme}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <App />\r\n          </MuiPickersUtilsProvider>\r\n        </ThemeProvider>\r\n      </HashRouter>\r\n    </StoreProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}